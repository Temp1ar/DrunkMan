Не ясно распределение обязанностей между объектами. Возникло несколько вопросов.
FIXED 1. Почему лампа - динамический объект (а стол - нет)?
FIXED 2. Зачем специфику поведения пьяницы (isValid) тащить на уровень DynamicObject?
FIXED 3. Какой смысл у метода Point.canEqual?
FIXED 4. Field сейчас используется игрой, объектами игры и PathFinder'ом в разных ролях. Каждый из них использует ссылку на Field. Какой из принципов ООП сейчас нарушен?
FIXED 5. FieldObject.getRandomNeighbour(). Почему этот метод находится в классе FieldObject, если случайно ходит только пьяница? Почему он public?

Для основных классов и интерфейсов (Field, FieldObject, DynamicObject, Dispatcher, GameEngine) опиши их ответственности (responsibility).

PS. В коде много не актуальных @Override'ов, просьба почистить.